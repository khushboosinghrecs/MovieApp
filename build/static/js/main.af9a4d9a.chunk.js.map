{"version":3,"sources":["Components/Paginations.js","Components/MovieTable.js","Components/Search.js","App.js","index.js"],"names":["Pagination","props","totalPage","Math","ceil","movieList","length","changePage","i","pageinfo","changeCurPage","className","list","curPage","push","onClick","getPage","MovieTable","useState","style","cursor","sortOption","changeSortOption","indexStart","indexEnd","slice","map","x","onMouseOver","Title","Year","BoxOffice","imdbRating","getAllList","Search","color","border","padding","value","filterObj","filtering","filterValue","onChange","e","changeFiltering","oldstate","target","searchValue","type","placeholder","App","movieList2","filter","str","startsWith","sort","a","b","localeCompare","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.af9a4d9a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Pagination = (props)=>{\n    let totalPage = Math.ceil(props.movieList.length / 10);\n    let changePage = (i)=>{\n        props.pageinfo.changeCurPage(i);\n    }\n    let getPage = ()=>{\n        let list = [];\n        for(let i=1;i<=totalPage;i++){\n            if(i === props.pageinfo.curPage){\n                list.push(<li key={i} onClick={()=>changePage(i)} className=\"active waves-effect\"><a>{i}</a></li>);\n            }else{\n                list.push(<li key={i} onClick={()=>changePage(i)} className=\"waves-effect\"><a>{i}</a></li>);\n            }\n        }\n        return list;\n    }\n    \n\n    return (\n        <ul className=\"pagination\">\n            {getPage()}\n        </ul>\n    )\n}\nexport default Pagination;","import { useState } from \"react\";\nimport Pagination from \"./Paginations\"\n\nconst MovieTable = (props)=>{\n    let [curPage,changeCurPage] = useState(1);\n    let getAllList = ()=>{\n        let indexStart = ((curPage-1) * 10);\n        let indexEnd = (curPage * 10);\n        let realMovieList = props.movieList.slice(indexStart,indexEnd);\n        return realMovieList.map((x,i)=>{\n            return (\n                <tr onMouseOver={()=>{}} key={i}>\n                    <td>{x.Title}</td>\n                    <td>{x.Year}</td>\n                    <td>{x.BoxOffice}</td>\n                    <td>{x.imdbRating}</td>\n                </tr>\n            )\n        })\n    }\n    return (\n        <div>\n            <table className=\"striped centered responsive-table\">\n            <thead>\n                <tr>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"Title\")}}>Title</th>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"Year\")}}>Year</th>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"BoxOffice\")}}>BoxOffice</th>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"imdbRating\")}}>Imdb Rating</th>\n                </tr>\n            </thead>\n                <tbody>\n                    {getAllList()}\n                </tbody>\n            </table>\n            <Pagination pageinfo={{curPage,changeCurPage}} movieList={props.movieList}></Pagination>            \n      </div>\n    )\n}\nexport default MovieTable;","const Search = (props)=>{\n\n\n    let filterOnChange = (e)=>{\n        props.filterObj.changeFiltering(oldstate=>{\n            return {\n                ...oldstate,\n                filterValue : e.target.value,\n                searchValue : \"\"\n            }\n        });\n    }\n    let searchOnChange = (e)=>{\n        props.filterObj.changeFiltering(oldstate=>{\n            return {\n                ...oldstate,\n                searchValue : e.target.value\n            }\n        });\n    }\n    \n    return (\n        <div style={{color:\"#26A69A\", border:\"1px solid #26A69A\", padding:\"20px\"}}>\n            <h5>SearchBox</h5>\n            <select value={props.filterObj.filtering.filterValue} onChange={filterOnChange} className=\"browser-default\">\n                <option value=\"\">Choose your option</option>\n                <option value=\"Title\">Title</option>\n                <option value=\"Year\">Year</option>\n                <option value=\"BoxOffice\">BoxOffice</option>\n                <option value=\"imdbRating\">Imdb Rating</option>\n            </select>\n            <input value={props.filterObj.filtering.searchValue} onChange={searchOnChange} type=\"text\" placeholder=\"Search here\"></input>\n        </div>\n        )\n}\nexport default Search;","import { useState } from 'react';\nimport movieList from './Assets/data.json'\nimport MovieTable from './Components/MovieTable';\nimport Search from './Components/Search';\nconst App = (props)=>{\n    let searchOption = {\n        filterValue : \"\",\n        searchValue : \"\"\n    }\n    let [filtering,changeFiltering] = useState(searchOption);\n    let [sortOption,changeSortOption] = useState(\"\");\n    let filterMovieList = ()=>{\n        if(filtering.filterValue && filtering.searchValue){\n            return movieList.filter(x=>{\n                let str = x[filtering.filterValue];\n                if(!str){\n                    return false;\n                }\n                return str.startsWith(filtering.searchValue);\n            })\n        }\n        return movieList;\n    }\n    let movieList2 = filterMovieList();\n    if(sortOption){\n        movieList2.sort((a,b)=>{\n            if(sortOption === 'Title'){\n                return a.Title.localeCompare(b.Title);\n            }\n            if(sortOption === 'Year'){\n                return a.Year - b.Year;\n            }\n            if(sortOption ==='imdbRating'){\n                return b.imdbRating - a.imdbRating;\n            }\n            \n            if(sortOption === 'BoxOffice'){\n                return b.BoxOffice - a.BoxOffice;\n            }\n        })\n    }\n    return (\n        <div className=\"container\">\n            <h3>MovieList</h3>\n            <Search filterObj={{filtering,changeFiltering}}></Search>\n            <MovieTable sortOption={{sortOption,changeSortOption}} movieList={movieList2}></MovieTable>\n        </div>\n    )\n}\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App></App>,document.querySelector(\"#root\"));"],"sourceRoot":""}